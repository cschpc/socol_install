#90! /usr/bin/env bash
#______________________________________________________________________________
#
# Wrapper script for calling the different configure scripts in a consistent way
#
#                    For details, skip to 'Customization'
#______________________________________________________________________________
#
set -eu
#_______________________________________________________________________________
#
# Package information
#_______________________________________________________________________________
#

PACKAGE=mpiesm-1.2.01

#_______________________________________________________________________________
#
# Utility functions
#_______________________________________________________________________________
#
set +e # Do not break if terminal has no color capacity
red=$(tput setaf 1)
green=$(tput setaf 2)
blue=$(tput setaf 4)
bgcolor=$(tput sgr0)
set -e
#
redln() { echo "${red}${1}${bgcolor}"; }
blueln() { echo "${blue}${1}${bgcolor}"; }
greenln () { echo "${green}${1}${bgcolor}"; }
#
function banner {
    typeset line
    line=________________________________________________________________________________
    echo
    blueln $line
    echo
    greenln "$*"
    blueln $line
    echo
}

function create {
    $NO_CREATE && return
    typeset file
    file=$1
    echo creating $file
    mkdir -p $(dirname $1)
    sed \
    "
        s,@prefix@,${configPrefix},g
        s,@echam6_source@,${ECHAM6_SOURCE},g
        s,@mpiom_source@,${MPIOM_SOURCE},g
        s,@oasis3_mct_source@,${OASIS3_MCT_SOURCE},g
        s,@distdir@,${PACKAGE},g
        s,@environment@,${ENVIRONMENT},g
        s,@top_srcdir@,${top_srcdir},g
        s,@setup_options@,${setup_options},g
    " \
        $top_srcdir/$file.in > $file.check

    if diff $file $file.check > /dev/null 2>&1
    then
        echo $file is unchanged
        rm -f $file.check
    else
        mv -f $file.check $file
    fi
}

function switchForModule {
    packageName=$(echo $1 | awk -F "/" '{print $1}')
    
    for sameName in $(module -t list 2>&1 | awk -v packageName=$packageName '$1 ~ packageName {print}')
    do
        module unload $sameName
    done
    
    for conflict in $(module show $packageName 2>&1 | awk '$1 ~ /conflict/ {print $2}')
    do
        module unload $conflict
    done
    
    module load $1
}

#_______________________________________________________________________________
#
# Command line
#_______________________________________________________________________________
#

for ARG in "$0" "$@"
do
    LINE=${LINE:-}${LINE:+ }$(printf %q "$ARG")
done
echo "configure for '$PACKAGE' run at $(date) as" >> config.log
echo "$LINE" >> config.log

NO_CREATE=false

while [[ "${1:-}" == --* ]]
do 
    case "$1" in
        --help*)
            NO_CREATE=true
            cat >&2 << EOT
Usage: $0 [control_option ...] [option ...]

Control options:

--[no-](oasis|mpiom|echam), --no-recurse
    (de-)select the submodels to be configured for building
--with-mpi=...
    select MPI implementation (names and default are system dependent)

Special submodel options (always passed to submodel configure):

--prefix=...
    set installation directory
--(en|dis)able-HAMOCC
    add info for HAMOCC option to experiment setup config

EOT
            break
            ;;
        --oasis*|--mpiom*|--echam*|--no-oasis*|--no-mpiom*|--no-echam*)
            case "$1" in
                --no-*) setting=false; default=true  ;;
                *)      setting=true;  default=false ;;
            esac
            CONFIGURE_OASIS3_MCT=${CONFIGURE_OASIS3_MCT:-$default}
            CONFIGURE_MPIOM=${CONFIGURE_MPIOM:-$default}
            CONFIGURE_ECHAM6=${CONFIGURE_ECHAM6:-$default}
            case "$1" in
                --*oasis*) CONFIGURE_OASIS3_MCT=$setting ;;
                --*mpiom*) CONFIGURE_MPIOM=$setting ;;
                --*echam*) CONFIGURE_ECHAM6=$setting ;;
            esac
            ;;
        --no-recurse)
            CONFIGURE_OASIS3_MCT=false
            CONFIGURE_MPIOM=false
            CONFIGURE_ECHAM6=false
            ;;
        --with-mpi=*)
            configMPI=${1#--with-mpi=}
            ;;
        *) break;;
    esac
    shift
done

# Scan remaining options for setup options

setup_options=
for ARG
do
    case "$ARG" in
        --disable-HAMOCC)
            if [[ $setup_options != *no_hamocc* ]]
            then
                setup_options="$setup_options${setup_options:+,}no_hamocc"
            fi
            ;;
        --enable-HAMOCC)
            if [[ $setup_options == *no_hamocc* ]]
            then
                setup_options=${setup_options/,no_hamocc/}
                setup_options=${setup_options/no_hamocc,/}
                setup_options=${setup_options/no_hamocc/}
            fi
            ;;
        --prefix=*)
            configPrefix=${ARG#--prefix=}
            ;;
    esac
done


CONFIGURE_OASIS3_MCT=${CONFIGURE_OASIS3_MCT:-true}
CONFIGURE_MPIOM=${CONFIGURE_MPIOM:-true}
CONFIGURE_ECHAM6=${CONFIGURE_ECHAM6:-true}

#_______________________________________________________________________________
#
#                     Define variablese
CONFIG_SHELL=${CONFIG_SHELL:-""}

CC=${CC:-""} 
CXX=${CXX:-""} 
CFLAGS=${CFLAGS:-""}
F77=${F77:-""}
FFLAGS=${FFLAGS:-""} 
FC=${FC:-""} 
MPIFC=${MPIFC:-""} 
FCFLAGS=${FCFLAGS:-""} 
FCFLAGS_MPIOM=${FCFLAGS_MPIOM:-""}
FCFLAGS_ECHAM=${FCFLAGS_ECHAM:-""}
ARFLAGS=${ARFLAGS:-""}
WLFLAG=${WLFLAG:-""}

MPIROOT=${MPIROOT:-""}
MPI_INCLUDE=${MPI_INCLUDE:-""}     
MPI_LIB=${MPI_LIB:-""}            

NETCDFFROOT=${NETCDFFROOT:-""}    
NETCDFF_VERSION=${NETCDFF_VERSION:-""} 
NETCDFF_INCLUDE=${NETCDFF_INCLUDE:-""}
NETCDFF_LIB=${NETCDFF_LIB:-""}

NETCDFROOT=${NETCDFROOT:-""}      
NETCDF_VERSION=${NETCDF_VERSION:-""} 
NETCDF_INCLUDE=${NETCDF_INCLUDE:-""}
NETCDF_LIB=${NETCDF_LIB:-""}

HDF5ROOT=${HDF5ROOT:-""}           
HDF5_VERSION=${HDF5_VERSION:-""} 
HDF5_INCLUDE=${HDF5_INCLUDE:-""}    
HDF5_LIB=${HDF5_LIB:-""}           

SZIPROOT=${SZIPROOT:-""}           
ZLIBROOT=${ZLIBROOT:-""}           

SRCDIRS=${SRCDIRS:-""}
LAPACKROOT=${LAPACKROOT:-""} 
LAPACK_LIB=${LAPACK_LIB:-""}
SUPPORTROOT=${SUPPORTROOT:-""}
SUPPORT_LIB=${SUPPORT_LIB:-""}

OASIS3_MCT_ROOT=${OASIS3_MCT_ROOT:-""}
OASIS3MCT_FC_LIB=${OASIS3MCT_FC_LIB:-""}

#_______________________________________________________________________________
#
#                               Customization
#_______________________________________________________________________________
#

# Select one from the compiler configurations listed in the 'case ${configHost'
# statement below.
#
# For your custom configuration, copy an appropriate case in the statement to a
# new name, adjust to your needs and set configCompiler to the new name
configCompiler=fortran

# Set installation directory (prefix) for the model components/binaries.
# Defaults to the current working directory
#
# Within this directory, OASIS3-MCT creates 'lib' and 'install' sub-directories,
# ECHAM and MPIOM use 'bin'.
top_srcdir=$(cd $(dirname $0); pwd)
top_builddir=$(pwd)
configPrefix=${configPrefix:-$top_srcdir}

# Select source code location or specific versions for the model components.
# Must be given as absolute path names.
#
# This is rexerlevant if you stored the source files at a different location
# or if you got several versions of the components by repeatedly calling
# 'get_mpiesm'. Defaults to the version that you got most recently, within the
# current working directory.

OASIS3_MCT_SOURCE=src/oasis3mct
MPIOM_SOURCE=src/mpiom
ECHAM6_SOURCE=src/echam

#______________________________________________________________________________
#
blueln "Configure installation directory is $configPrefix"
configHost=$(perl -l -mNet::Domain -e 'print Net::Domain::hostfqdn()')
configSystem=$(lsb_release -sc || echo unknown)
blueln "Configure for $configHost-$configSystem..."
#______________________________________________________________________________
#
# Compiler configurations
#

CONFIG_SHELL=/bin/bash
OASIS3_MCT_ROOT=$configPrefix

DEFINES=
LIBS_MPIOM=

ENVIRONMENT=

typeset -a site_extras=


	ENVIRONMENT=csc_sisu

	set +u
	source $MODULESHOME/init/bash
	set -u

	compiler=$configCompiler

	SRCDIRS="support blas lapack"
	LAPACKROOT=
	LAPACK_LIB=
	SUPPORTROOT=..
	SUPPORT_LIB='-L$(SUPPORTROOT)/lib -lsupport'
	ARFLAGS=crv

	case $compiler in

	intel)            
	switchForModule PrgEnv-gnu
	switchForModule craype-sandybridge
	switchForModule cray-mpich/8.1.23
	switchForModule cray-netcdf/4.9.0.3
	switchForModule cray-hdf5/1.12.2.1
	PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$PE_INTEL_FIXED_PKGCONFIG_PATH
	;;
    esac

	# module load LUMI/22.08 partition/C
	# module load PrgEnv-gnu/8.4.0

	# module load cray-mpich/8.1.27
	# module load cray-hdf5/1.12.2.1

	# module load cray-netcdf/4.9.0.3
  
  module load socol/${BUILDNAME}

	MPIROOT=${MPICH_DIR}

    prefix_string="netcdf_prefix"
	NETCDFROOT=$(pkg-config --variable=${prefix_string} netcdf)	
	NETCDF_VERSION=$(pkg-config --modversion netcdf)
	NETCDF_INCLUDE=$(pkg-config --cflags netcdf)
	NETCDF_LIB=$(pkg-config --libs netcdf)
	echo $NETCDFROOT

	NETCDFFROOT=$(pkg-config --variable=${prefix_string} netcdf-fortran)
	NETCDFF_VERSION=$(pkg-config --modversion netcdf-fortran)
	NETCDFF_INCLUDE=$(pkg-config --cflags netcdf-fortran)
	NETCDFF_LIB=$(pkg-config --libs netcdf-fortran)

	prefix_string=$(pkg-config --print-variables hdf5 | awk '$1 ~ /prefix/ { print }')
	HDF5ROOT=$(pkg-config --variable=${prefix_string} hdf5)
	HDF5_VERSION=$(pkg-config --modversion hdf5)
	HDF5_INCLUDE=$(pkg-config --cflags hdf5)
	HDF5_LIB=$(pkg-config --libs hdf5)

	SOCOL_ROOT=${SOCOL_ROOT:-$HOME/workspace/geraclis}

	YAXTROOT=$SOCOL_ROOT/usr
	CDIROOT=$SOCOL_ROOT/usr

	CDO=$SOCOL_ROOT/usr/bin/cdo

	echo $CDO

	CC=cc
	CXX=CC
	FC=ftn
	F77=ftn
	F90=ftn
	MPIFC=ftn
	MPICC=cc
	MPICXX=CC

    #CFLAGS="-Df2cFortran -std=gnu99 -O"
	CFLAFGS=" -g "
    #FCFLAGS="-fno-alias -O -ip -align -DTREAT_OVERLAY -Duse_netCDF -Duse_comm_MPI1"
    #FCFLAGS="-O -DTREAT_OVERLAY -Duse_netCDF -Duse_comm_MPI1"
#	FCFLAGS="--std=legacy -Duse_comm_MPI1 -O -DTREAT_OVERLAY -Duse_netCDF -g -fbacktrace -fcheck=all -finit-real=nan"
	FCFLAGS="--std=legacy -Duse_comm_MPI1 -O -DTREAT_OVERLAY -Duse_netCDF -g -fbacktrace -finit-real=nan"
	FFLAGS="$FCFLAGS"
    #FCFLAGS_ECHAM="-O -fast-transcendentals -fp-model source"
	FCFLAGS_ECHAM="--std=legacy -ffree-line-length-512 -g -Duse_comm_MPI1 -fbacktrace -finit-real=nan" 
	FCFLAGS_MPIOM="--std=legacy -ffree-form  -x f77-cpp-input -g -fbacktrace -fimplicit-none -finit-real=nan -Duse_comm_MPI1"

    #FCFLAGS_MPIOM="-g -O2 -ef -fp-model source -fpe0 -i4 -heap-arrays -convert big_endian -fpp -O"
	LIBS_MPIOM="-Wl,-rpath,${NETCDFFROOT}/lib:${NETCDFROOT}/lib:${HDF5ROOT}/lib:${SZIPROOT}/lib:${MPIROOT}/include/lib:${CDIROOT}/include"

	site_extras=(NETCDFF_VERSION="$NETCDFF_VERSION" NETCDFF_INCLUDE="$NETCDFF_INCLUDE" NETCDFF_LIB="$NETCDFF_LIB")
	site_extras+=(NETCDF_VERSION="$NETCDF_VERSION" NETCDF_INCLUDE="$NETCDF_INCLUDE" NETCDF_LIB="$NETCDF_LIB")
	;;

    esac # sisu-*|uan*)
#_______________________________________________________________________________
#
#                            End of Customization
#_______________________________________________________________________________
#
# Main routine
#_______________________________________________________________________________
#

banner Creating Makefiles

#_______________________________________________________________________________
#
echo
blueln "CONFIG_SHELL     $CONFIG_SHELL"
echo
blueln "CC               $CC" 
blueln "CXX              $CXX" 
blueln "CFLAGS           $CFLAGS"
blueln "F77              $F77" 
blueln "FFLAGS           $FFLAGS" 
blueln "FC               $FC" 
blueln "MPIFC            $MPIFC" 
blueln "FCFLAGS          $FCFLAGS" 
blueln "FCFLAGS_MPIOM    $FCFLAGS_MPIOM"
blueln "FCFLAGS_ECHAM    $FCFLAGS_ECHAM"
blueln "ARFLAGS          $ARFLAGS"
blueln "WLFLAG           $WLFLAG"
echo
blueln "MPIROOT          $MPIROOT"
blueln "MPI_INCLUDE      $MPI_INCLUDE"     
blueln "MPI_LIB          $MPI_LIB"            
echo
blueln "NETCDFFROOT      $NETCDFFROOT"    
blueln "NETCDFF_VERSION  $NETCDFF_VERSION" 
blueln "NETCDFF_INCLUDE  $NETCDFF_INCLUDE"
blueln "NETCDFF_LIB      $NETCDFF_LIB"
echo
blueln "NETCDFROOT       $NETCDFROOT"      
blueln "NETCDF_VERSION   $NETCDF_VERSION" 
blueln "NETCDF_INCLUDE   $NETCDF_INCLUDE"
blueln "NETCDF_LIB       $NETCDF_LIB"
echo
blueln "HDF5ROOT         $HDF5ROOT"           
blueln "HDF5_VERSION     $HDF5_VERSION" 
blueln "HDF5_INCLUDE     $HDF5_INCLUDE"    
blueln "HDF5_LIB         $HDF5_LIB"           
echo
blueln "SZIPROOT         $SZIPROOT"           
blueln "ZLIBROOT         $ZLIBROOT"           
echo
blueln "SRCDIRS          $SRCDIRS"
blueln "LAPACKROOT       $LAPACKROOT" 
blueln "LAPACK_LIB       $LAPACK_LIB"
blueln "SUPPORTROOT      $SUPPORTROOT"
blueln "SUPPORT_LIB      $SUPPORT_LIB"
echo
blueln "OASIS3_MCT_ROOT  $OASIS3_MCT_ROOT"
blueln "OASIS3MCT_FC_LIB $OASIS3MCT_FC_LIB"
echo

create Makefile
create run/SETUP.config

#_______________________________________________________________________________
#

if $CONFIGURE_OASIS3_MCT
then
    mkdir -p $top_builddir/$OASIS3_MCT_SOURCE
    cd $top_builddir/$OASIS3_MCT_SOURCE

    banner Configuring OASIS3-MCT @ $(pwd)

    $CONFIG_SHELL $top_srcdir/$OASIS3_MCT_SOURCE/configure \
        --prefix=$OASIS3_MCT_ROOT \
        CONFIG_SHELL=$CONFIG_SHELL \
        CC="$CC" \
	F77="$F77" \
        FFLAGS="$FFLAGS" \
        FC="$FC" \
        MPIFC="$MPIFC" \
        FCFLAGS="$FCFLAGS" \
        ARFLAGS="$ARFLAGS" \
        HDF5ROOT="$HDF5ROOT" \
        "${site_extras[@]}" \
        "${@:-}"
        #NETCDFFROOT="$NETCDFFROOT" \
        #NETCDFROOT="$NETCDFROOT" \

fi

#_______________________________________________________________________________
#

if $CONFIGURE_MPIOM
then
    mkdir -p $top_builddir/$MPIOM_SOURCE
    cd $top_builddir/$MPIOM_SOURCE

    banner Configuring MPIOM @ $(pwd)

    FORT_REAL_LEN=${FORT_REAL_LEN:-""}
    cross_compiling=${cross_compiling:-""}

    $CONFIG_SHELL $top_srcdir/$MPIOM_SOURCE/configure \
        --prefix=$configPrefix \
        --disable-mh-file \
        --with-coupler=oasis3-mct \
        --enable-HAMOCC \
        CONFIG_SHELL=$CONFIG_SHELL \
        CC="$CC" \
        CFLAGS="$CFLAGS" \
        FC="$FC" \
        MPIFC="$MPIFC" \
        FCFLAGS="$FCFLAGS_MPIOM" \
        ARFLAGS="$ARFLAGS" \
        MPIROOT="$MPIROOT" \
        CDO="$CDO" \
	    ZLIBROOT="$ZLIBROOT" \
        SZIPROOT="$SZIPROOT" \
        HDF5ROOT="$HDF5ROOT" \
        NETCDFROOT="$NETCDFROOT" \
        LIBS="$LIBS_MPIOM" \
        OASIS3MCT_FC_LIB="$OASIS3MCT_FC_LIB" \
        OASIS3MCTROOT="$OASIS3_MCT_ROOT" \
        QUEUE_SUBMIT="" \
        FORT_REAL_LEN="$FORT_REAL_LEN" \
        cross_compiling="$cross_compiling" \
        "${site_extras[@]}" \
        "${@:-}"
fi

#_______________________________________________________________________________
#

if $CONFIGURE_ECHAM6
then
    mkdir -p $top_builddir/$ECHAM6_SOURCE
    cd $top_builddir/$ECHAM6_SOURCE

    banner Configuring ECHAM @ $(pwd)

    # Note that the configure of ECHAM does not work with mpif90
    # mpi libraries have to be provided in MPI_LIB. The mpi include
    # directory is deduced from MPIROOT.
	#--enable-cdi-pio
    $CONFIG_SHELL $top_srcdir/$ECHAM6_SOURCE/configure \
        --prefix=$configPrefix \
        --disable-mh-file \
        --with-coupler=oasis3-mct \
        --disable-shared \
        CONFIG_SHELL=$CONFIG_SHELL \
        CC="$CC" \
        CXX="$CXX" \
        CFLAGS="$CFLAGS" \
        FFLAGS="$FFLAGS" \
        FC="$FC" \
        F77="$F77" \
        FCFLAGS="$FCFLAGS_ECHAM" \
        ARFLAGS="$ARFLAGS" \
        WLFLAG="$WLFLAG" \
        MPIROOT="$MPIROOT" \
        NETCDFROOT="$NETCDFROOT" \
        NETCDFFROOT="$NETCDFFROOT" \
        HDF5ROOT="$HDF5ROOT" \
        SZIPROOT="$SZIPROOT" \
        YAXTROOT="$YAXTROOT" \
        CDIROOT="$CDIROOT" \
        OASIS3MCTROOT="$OASIS3_MCT_ROOT" \
        MPI_LIB="$MPI_LIB" \
        SRCDIRS="$SRCDIRS" \
        LAPACKROOT="$LAPACKROOT" \
        LAPACK_LIB="$LAPACK_LIB" \
        SUPPORTROOT="$SUPPORTROOT" \
        SUPPORT_LIB="$SUPPORT_LIB" \
        "${site_extras[@]}" \
        ${DEFINES} \
        "${@:-}"
fi

#_______________________________________________________________________________
#

banner All components configured

#_______________________________________________________________________________
#
